import type { int32 } from "../types/misc/datatypes.js";
declare type PaginationParams<ExtendType> = ExtendType & {
    cursor?: string;
    limit?: int32;
};
declare type PaginationHeader<ExtendType> = ExtendType & Record<string, string>;
export declare class Pages<QueryParams, Headers, ItemData> {
    /**
     * Whether or not the current page is the last page available.
     */
    isFinished: boolean;
    private keys;
    private params;
    private readonly keyName;
    private readonly rawUrl;
    private readonly headers;
    constructor(keyName: string, rawUrl: string, params: PaginationParams<QueryParams>, headers: PaginationHeader<Headers>);
    GetCurrentPageAsync(): Promise<ItemData[]>;
    /**
     * Iterates to the next page in the pages object, if possible.
     */
    AdvanceToNextPageAsync(): Promise<undefined>;
}
export {};
//# sourceMappingURL=pages.d.ts.map